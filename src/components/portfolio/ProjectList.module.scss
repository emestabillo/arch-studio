@use "../../styles/abstracts/index" as *;

.grid {
  display: grid;
  gap: rem(24px);
  padding-block: rem(56px) rem(132px);

  @include breakpoint(sm) {
    padding-bottom: rem(132px);
  }

  @include breakpoint(md) {
    grid-template-columns: repeat(auto-fit, minmax(311px, 1fr));
    gap: rem(30px);
    padding-block: rem(24px) rem(160px);
  }
}

.card {
  display: grid;
  grid-template-areas: "content";
  position: relative;

  &::after {
    content: "";
    background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.5) 100%
    );
    height: 100%;
    position: absolute;
    width: 100%;
    z-index: -1;

    @include breakpoint(md) {
      height: 50%;
      bottom: 0;
    }
  }

  > * {
    grid-area: content;
  }
}

.number {
  position: relative;
  counter-increment: step-counter;
  // font-size: rem(200px);
  // font-weight: 700;
  // letter-spacing: -5px;

  &::before {
    color: var(--clr-white);
    font-size: rem(200px);
    font-weight: 700;
    letter-spacing: -5px;
    line-height: 1;
    opacity: 50%;
    position: absolute;
    right: 1rem;
    top: 0;

    @include breakpoint(sm) {
      content: counter(step-counter);
      right: 0;
      top: 1rem;
    }
  }
}

.textContainer {
  color: var(--clr-white);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding-bottom: rem(24px);
  padding-left: rem(24px);

  @include breakpoint(sm) {
    padding-bottom: rem(40px);
    padding-left: rem(40px);
  }
}

.heading {
  color: var(--clr-white);
  font-size: rem(18px);
  font-weight: 700;
  letter-spacing: 0;
  line-height: 1.4;

  a {
    color: inherit;
    display: block;

    &::after {
      content: "";
      position: absolute;
      inset: 0;
      background-color: var(--clr-white);
      opacity: 0;
      transition: var(--transition);
      z-index: 2;
    }

    &:hover {
      &::after {
        opacity: 0.4;
      }
    }
  }
}

.subheading {
  opacity: 0.75;
}

.ctaLink {
  color: inherit;
  text-transform: capitalize;
  text-decoration: underline;
  text-decoration-color: transparent;
  transition: var(--transition);

  &:hover {
    text-decoration-color: currentColor;
  }
}

.imageContainer {
  position: relative;
  z-index: -1;

  img {
    object-fit: cover;
  }
}
